对象【重点】
  概念和作用：对象是引用类型的一种，叫object类型。用来存储一种事物的数据。
  定义对象：
    let 对象名 = {
      属性名:属性值,
      属性名:属性值,
      ...
      方法名:function(参数1,参数2,...){
        方法体代码;
        return 结果;
      },
      方法名(参数1,参数2,...){
        方法体代码;
        return 结果;
      }
    }
  访问对象的属性：
    添加/修改属性：对象名.属性名=值;   说明：属性名存在就表示修改，不存在表示添加。
    获取属性值：对象名.属性名;
  访问对象的方法：
    let 变量 = 对象名.方法名(参数值1,参数值2,...);

BOM和DOM
  BOM：浏览器对象模型，将浏览器的各个组成部分封装成对象，使用这些对象就可以操作浏览器。【了解】
    window：窗口对象
      alert（'警告信息'）：显示带有一段消息和一个确认按钮的警告框。
      confirm（'确认信息'）：显示带有一段消息以及确认按钮和取消按钮的对话框。
      setTimeout（匿名函数，等待的毫秒）：在指定的毫秒数后调用函数或计算表达式（一次性定时器）。
      setInterval（匿名函数,等待的毫秒）：按照指定的周期（以毫秒计）来调用函数或计算表达式（循环定时器）。
    location：地址栏对象
      href属性，获取完整的URL地址，赋值时用于地址的跳转,也就是页面跳转
      search属性，获取地址中携带的参数，符号？后面部分
      reload()方法，用来刷新当前页面，传入参数true时表示强制刷新

  DOM：文档对象模型，将html文档中的各个组成部分(标签、属性等)封装成对象，使用这些对象可以操作页面的标签。
    DOM操作的步骤：
      第一步：获取元素/标签对象。
        document.querySelector('css选择器')：根据css选择器获取一个元素对象。
        document.querySelectorAll('css选择器')：根据css选择器获取多个元素对象。
      第二步：通过元素对象操作标签的内容、属性、样式等。
        操作内容：
          innerHTML属性：获取/设置标签中的内容，如果内容中有html代码可以被浏览器解析。 元素对象.innerHTML = 'html代码'
          innerText属性：获取/设置标签中的内容，如果内容中有html代码不能被浏览器解析。 元素对象.innerText = '普通文本'
        操作属性：
          元素对象.html属性 = 值。例如：img.src='图片地址';
        操作样式：
          方式一:元素对象.style.样式属性 = 样式值;
          方式二:通过class属性操作css（适合设置大量样式）
            第一步：先使用类选择器定义好样式
            第二步：元素对象.className = '类名' 给标签设置类名
          方式三:通过classList操作css【了解】
            元素对象.classList.add（'类名） //添加类型
            元素对象.classList.remove（类名） //移除类名
            元素对象.classList.toggle（类名） //如果类名存在就是移除，如果不存在就是添加
事件
  什么是事件以及事件绑定?
    事件:发生在元素身上的事情,例如按钮被点击了,鼠标移到标签身上了,...
    事件绑定:事件发生之后要执行的函数
  绑定方式:
    元素对象.addEventListener('事件类型',function(){

    })

    元素对象.on事件类型 = function(){  //【了解】

    }

    <button on事件类型="函数名()">点击</button>
    <script> 
      function 函数名(){  //【了解】

      }
    </script>