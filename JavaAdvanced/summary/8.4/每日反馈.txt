①、continue、break、和return的区别是什么？
    continue 作用于循环内部，作用为跳过当前循环，进入下一轮循环
    break 作用于循环或者switch语句中，作用为结束循环或者switch语句
    return 作用于方法中，作用为如果有返回值则结束当前方法，并返回一个值。如果没返回值，则结束方法
②、Java中的几种基本数据类型是什么？对应的包装类型是什么？各自占用多少字节呢？
    java中有8种基本数据类型，4种整形 byte short int long 字符型 char
    浮点型 float double 布尔型 boolean
    包装类为Byte Short Integer Long Character Float Double Boolean
            1   2      4       8      2       4     8       1
③、面向对象三大特性分别是什么？分别阐述一下？
    封装，继承，多态
    封装 将类的信息隐藏在类的内部，不允许外部直接访问，而是通过提供的方法间接访问
    继承 子类继承父类的方法和属性，并可以进行扩展和修改，实现代码的复用
    多态 一个对象具有多种的状态，具体表现为父类的引用指向子类的实例
④、什么是单例模式？单例的实现方式有哪几种？
    单例模式 只允许一个类创建一个实例对象
    有两种 饿汉式和懒汉式
    // 单例类
    public class A {
        // 2、定义一个静态变量记住类的一个对象
        private static A a = new A();
        // 1、私有构造器
        private A(){
        }
        // 3、定义一个静态方法返回对象
        public static A getInstance(){
            return a;
        }
    }
    public class B {
        // 2、定义一个类变量量用于存储对象
        private static B b ; // null
        // 1、单例必须私有构造器
        private B(){
        }

        // 3、提供一个类方法返回类的一个对象
        public static B getInstance(){
            if(b == null){
                b = new B();
            }
            return b;
        }
    }
⑤、string 常用的方法有哪些？
    length() 求字符串长度
    charAt(int index)：返回指定索引的字符。
    substring(int beginIndex, int endIndex)：截取子字符串（左闭右开）
    equals(Object obj)：比较字符串内容是否相等（区分大小写）
    equalsIgnoreCase(String anotherString)：忽略大小写比较内容。
    indexOf(String str)：返回子字符串首次出现的索引，无则返回 -1。
    lastIndexOf(String str)：返回子字符串最后出现的索引
    trim()：去除首尾空白字符
    replace(CharSequence target, CharSequence replacement)：替换字符串中的目标字符 / 子串。
    split(String regex)：按正则表达式分割字符串为数组
    toLowerCase()/toUpperCase()：转换为小写 / 大写

⑥、集合和数组的区别？
    数组的长度固定 数组能够存储基本数据类型和对象
    集合的长度不固定 集合只能够存储对象

⑦、final关键字的特点？
    final关键字代表最终的意思,可以修饰类,方法,变量
    修饰类时表明这个类是最终类，不能被继承
    修饰方法时代表当前方法是最终方法,特点:不能被重写
    修饰变量时如果是基本数据类型的变量，则其数值一旦在初始化之后便不能更改；如果是引用类型的变量，则在对其初始化之后便不能再让其指向另一个对象。

⑧、JDK JRE JVM 的区别？
    JDK是整个java的核心，是Java的开发工具包，包括了Java 运行环境 JRE、Java 工具和 Java 基础类库。
    JRE是运行 JAVA 程序所必须的环境的集合，包含 java 虚拟机和 java 程序的一些核心类库。
    JVM 是Java 虚拟机的缩写，是整个 java 实现跨平台的最核心的部分，能够运行以 Java 语言写作的软件程序。
    JDK = JRE + 开发工具
    JRE = JVM + 核心类库